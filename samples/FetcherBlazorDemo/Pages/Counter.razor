@page "/counter"
@inject HttpClient Http

@{
	isEvenQuery.SetParams(currentCount);
}

<PageTitle>Counter</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Counter</MudText>
<MudText Class="mb-4">Current count: @currentCount</MudText>

<MudText Class="mb-4">This number is: @if (isEvenQuery.IsFetching)
	{
		<text>...</text>
	}
	else if (isEvenQuery.IsSuccess)
	{
		<text>@(isEvenQuery.Data ? "even" : "odd")</text>
	}
	else if (isEvenQuery.IsError)
	{
		<text>@isEvenQuery.Error.Message</text>
	}
</MudText>

<MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="IncrementCount">Click me</MudButton>

@code {
    private int currentCount = 0;
	private Query<int, bool> isEvenQuery = null!;

	protected override void OnInitialized()
	{
		base.OnInitialized();
		isEvenQuery = new(
			StateHasChanged,
			async (val, token) => (await Http.GetFromJsonAsync<IsEvenResponse>($"https://api.isevenapi.xyz/api/iseven/{val}", token))!.IsEven
		);
	}

	private void IncrementCount()
	{
        currentCount++;
    }

	private record IsEvenResponse(bool IsEven);
}
