@page "/counter2"
@inject IsEvenApi Api

@{
    isEvenQuery.SetParams(currentCount);
}

<Observer Target=isEvenQuery OnChanged=@StateHasChanged />

<PageTitle>Counter</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Counter</MudText>
<MudText Class="mb-4">Current count: @currentCount</MudText>

<MudText Class="mb-4">This number is: @if (isEvenQuery.Query.IsFetching)
    {
        <text>...</text>
    }
    else if (isEvenQuery.Query.IsSuccess)
    {
        <text>@(isEvenQuery.Query.Data ? "even" : "odd")</text>
    }
    else if (isEvenQuery.Query.IsError)
    {
        <text>@isEvenQuery.Query.Error.Message</text>
    }
</MudText>

<MudButtonGroup>
    <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="DecrementCount">-</MudButton>
    <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="IncrementCount">+</MudButton>
</MudButtonGroup>

<MudButton @onclick="() => Api.IsEven.Invalidate(3)">Invalidate 3</MudButton>
<MudButton @onclick="Api.IsEven.InvalidateAll">Invalidate All</MudButton>
<MudButton @onclick="MakeTimers">Make Timers</MudButton>

@code {
    private int currentCount = 0;
    private QueryObserver<int, bool> isEvenQuery = null!;
    private List<Timer> timers = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        isEvenQuery = Api.IsEven.Use();
    }

    private void IncrementCount()
    {
        currentCount++;
    }

    private void DecrementCount()
    {
        currentCount--;
    }

    private void MakeTimers()
    {
        int sum = 0;
        const int maxCount = 1000;
        for(int i = 0; i < maxCount; i++)
        {
            var i2 = i;
            timers.Add(new Timer(
                _ =>
                {
                    Interlocked.Add(ref sum, i2);
                    if (i2 == maxCount - 1)
                        Console.WriteLine($"Timer finished, sum = {sum}");
                },
                null,
                TimeSpan.FromMilliseconds(i),
                Timeout.InfiniteTimeSpan
            ));
        }
    }
}
