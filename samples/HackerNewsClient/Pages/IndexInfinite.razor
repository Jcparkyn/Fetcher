@page "/infinite"
@*@using static HackerNewsClient.Shared.HackerNewsApi*@
@inject HackerNewsApi Api

<PageTitle>Hacker News Demo</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Front Page</MudText>
@*<MudButton OnClick="StateHasChanged">Render</MudButton>
<MudButton OnClick="() => Api.GetTopStories.InvalidateWhere(q => q.Arg.Page == 1)">Invalidate</MudButton>*@

@*<MudNumericField @bind-Value=_pageSize Label="Page Size" Min="1" Max="100" Style="max-width: 300px" />*@

<MudSelect T="int" @bind-Value=_pageSize Label="Page Size" Style="max-width: 300px">
    <MudSelectItem Value="10" />
    <MudSelectItem Value="20" />
    <MudSelectItem Value="50" />
    <MudSelectItem Value="100" />
</MudSelect>

<UseEndpointInfinite
    Endpoint="Api.GetTopStories"
    Arg="@new(Page: 0, PageSize: _pageSize, Tag: "front_page")"
    GetNextPageArg="(q, pageCount) => pageCount < q.Data?.NbPages ? q.Arg?.GetNextPageArgs() : null">
    <MudList>
        @foreach(var query in context.Pages)
        {
            @if (query.HasData)
            {
                @foreach (var post in query.Data.Hits)
                {
                    <MudListItem>
                        <PostPreview @key="post.Id" Post="post" />
                    </MudListItem>
                }
            }
            else if (query.IsLoading)
            {
                <MudProgressLinear Indeterminate Style="margin-bottom: 200px" />
            }
            else
            {
                <MudAlert Severity="Severity.Error">
                    Something went wrong!
                    @query.Error?.Message
                    <MudButton OnClick="query.Refetch">Retry</MudButton>
                </MudAlert>
            }
        }
    </MudList>
    @if (context.HasNextPage)
    {
        <div style="display: flex; justify-content: center">
            <MudButton OnClick="context.LoadNextPage">Load More</MudButton>
        </div>
    }
</UseEndpointInfinite>

@code {
    private int _pageSize = 10;
}
