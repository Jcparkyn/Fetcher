@page "/search"
@inject HackerNewsApi Api
@inject NavigationManager Nav

<PageTitle>Search | Hacker News</PageTitle>

<header style="margin-bottom: 16px">
    <h1>Search</h1>
    <MostRecentSelector />
</header>

<div style="display: flex; gap: 32px">
    <label>Search
        <input type="search" placeholder="Search" @bind-value="searchQuery.Value" />
    </label>
    <label>Author
        <input type="text" placeholder="Author" @bind-value="author.Value" />
    </label>
</div>

<InfinitePostList Arg="@new(Page: 0, PageSize: 30, Query: searchQuery.Value, Tag: Tag, StartDate: StartDate)" />

@code {
    [Parameter, SupplyParameterFromQuery(Name = "mostRecent")]
    public string MostRecent { get; set; } = "";

    public string Tag => string.IsNullOrEmpty(author.Value) ? "story" : $"story,author_{author.Value}";

    private QueryParam<string> searchQuery = null!;
    private QueryParam<string> author = null!;

    protected override void OnInitialized()
    {
        searchQuery = new(Nav, "query", "");
        author = new(Nav, "author", "");
    }

    // Round to day, so that this requests the same cache entry each time
    readonly DateTimeOffset now = DateTimeOffset.Now.Date;

    private DateTimeOffset? StartDate => MostRecent switch
    {
        "day" => now.AddDays(-1),
        "week" => now.AddDays(-7),
        "month" => now.AddDays(-31),
        _ => null,
    };
}