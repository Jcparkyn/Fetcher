@page "/post/{postId:int}"
@inject HackerNewsApi Api

<UseEndpoint Endpoint="@Api.GetItem" Arg="PostId" Context="query">
    @if (query.HasData)
    {
        var post = query.Data;
        <PageTitle>@post.Title</PageTitle>
        <h1>@post.Title</h1>
        <p>@((MarkupString)(post.Text ?? ""))</p>
        <p><strong>@post.Children.Count comments</strong></p>

        <ul class="comment-list">
            @foreach (var comment in post.Children)
            {
                @RenderComment(comment)
            }
        </ul>
    }
    else if (query.IsLoading)
    {
        <h1>Loading...</h1>
    }
    else if (query.IsError)
    {
        <strong>
            There was an error loading the selected post.
            <p>@query.Error.Message</p>
        </strong>
    }
</UseEndpoint>

@code {
    [Parameter]
    public int PostId { get; set; }

    private HashSet<HnItemDetails> collapsedItems = new();

    private void ToggleExpanded(HnItemDetails item){
        if (collapsedItems.Contains(item))
        {
            collapsedItems.Remove(item);
        }
        else
        {
            collapsedItems.Add(item);
        }
    }

    private RenderFragment RenderComment(HnItemDetails comment) =>
    @<li class="comment">
        <div class="comment-content">
            <div style="color: var(--col-primary)">@comment.Author</div>
            <p>@((MarkupString)(comment.Text ?? ""))</p>
        </div>
        @if (comment.HasChildren)
        {
            <div style="display: flex">
                <button @onclick="() => ToggleExpanded(comment)" class="collapse-toggle">
                    @(collapsedItems.Contains(comment) ? "▼ expand" : "▲")
                </button>
                @if (!collapsedItems.Contains(comment))
                {
                    <ul class="comment-list comment-children">
                        @foreach (var child in comment.Children)
                        {
                            <li>
                                @RenderComment(child)
                            </li>
                        }
                    </ul>
                }
            </div>
        }
    </li>;
}
