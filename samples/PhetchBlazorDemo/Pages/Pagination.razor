@page "/pagination"
@inject EarthquakeApi Api

<PageTitle>Pagination Example</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Pagination Example</MudText>

<MudText Class="mb-8">This component demonstrates fetching paginated data (a list of earthquakes) from a server.</MudText>

<div>
    <MudCheckBox @bind-Checked="EnablePrefetch" Color="Color.Secondary">
        Prefetch next page automatically?
    </MudCheckBox>
</div>

<UseEndpoint Endpoint="Api.GetEarthquakesEndpoint" Arg="new(PageSize, CurrentPage)" Context="query">
    <div style="margin-block: 12px">
        <MudButton @onclick="query.Refetch">Refresh</MudButton>

        @if (query.LastData is not null)
        {
            <MudPagination Color="Color.Primary"
                           Count="query.LastData.GetPageCount(PageSize)"
                           @bind-Selected="@CurrentPage" />
        }
    </div>

    @if (query.IsError)
    {
        var error = query.Error;
        <MudAlert Severity="Severity.Error">
            @error.Message
            <MudButton @onclick=query.Refetch Variant="Variant.Text" StartIcon="@Icons.Material.Filled.Refresh">
                Retry
            </MudButton>
        </MudAlert>
    }
    else
    {
        @if (query.HasData && EnablePrefetch)
        {
            Api.GetEarthquakesEndpoint.Prefetch(new(PageSize, CurrentPage + 1));
        }
        <MudTable Items="query.LastData?.Features ?? []"
              Hover="true"
              Elevation="0"
              Dense
              Loading="query.IsFetching">
            <HeaderContent>
                <MudTh>Location</MudTh>
                <MudTh>Magnitude</MudTh>
                <MudTh>Details</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Properties.Place</MudTd>
                <MudTd DataLabel="Magnitude">@context.Properties.Magnitude</MudTd>
                <MudTd DataLabel="Details"><MudLink Href="@context.Properties.Url" Target="_blank">More info</MudLink></MudTd>
            </RowTemplate>
        </MudTable>
    }
</UseEndpoint>

@code {
    private int CurrentPage { get; set; } = 1;
    private bool EnablePrefetch { get; set; } = false;
    private int PageSize { get; set; } = 10;
    private int GetPageCount(int totalCount, int pageSize) => (totalCount + pageSize - 1) / pageSize;
}
