@page "/pagination"
@inject CoinbaseApi Api

<PageTitle>Pagination Example</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Pagination Example</MudText>

<MudText Class="mb-8">This component demonstrates fetching paginated data from the server.</MudText>

<div>
    <MudCheckBox @bind-Checked="EnablePrefetch" Color="Color.Secondary">
        Prefetch next page automatically?
    </MudCheckBox>
</div>

<UseEndpoint Endpoint="Api.GetTopAssets" Arg="CurrentPage" Context="query">
    <div style="margin-block: 12px">
        <MudButton @onclick="query.Refetch">Refresh</MudButton>

        <MudPagination Color="Color.Primary"
                       Count="query.LastData?.Pagination.TotalPages ?? 1"
                       @bind-Selected="@CurrentPage" />
    </div>

    @if (query.IsError)
    {
        <MudAlert Severity="Severity.Error">@query.Error.Message</MudAlert>
    }
    else
    {
        @if (query.HasData && EnablePrefetch)
        {
            Api.GetTopAssets.Prefetch(CurrentPage + 1);
        }
        <MudTable Items="query.LastData?.Data"
              Hover="true"
              Elevation="0"
              Dense
              Loading="query.IsFetching">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Latest Price</MudTh>
                <MudTh>ID</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Latest">$@context.Latest</MudTd>
                <MudTd DataLabel="ID">@context.Id</MudTd>
            </RowTemplate>
        </MudTable>
    }
</UseEndpoint>

@code {
    private int CurrentPage { get; set; } = 1;
    private bool EnablePrefetch { get; set; } = false;
}
