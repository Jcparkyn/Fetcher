@page "/counter"
@inject HttpClient Http

@{
    isEvenQuery.SetParam(currentCount);
}

<ObserveQuery Target="isEvenQuery" OnChanged="StateHasChanged" />

<PageTitle>Counter</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Counter</MudText>
<MudText Class="mb-4">Current count: @currentCount</MudText>

<MudText Class="mb-4">
    This number is: @if (isEvenQuery.IsLoading)
    {
        <MudProgressLinear Indeterminate />
    }
    else if (isEvenQuery.IsError)
    {
        <MudAlert Severity="Severity.Error">@isEvenQuery.Error.Message</MudAlert>
    }
    else if (isEvenQuery.HasData)
    {
        <span style="@(isEvenQuery.IsFetching ? "opacity: 0.7" : "")">
            @(isEvenQuery.Data ? "even" : "odd")
        </span>
    }
</MudText>

<MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="IncrementCount">Click me</MudButton>

@code {
    private int currentCount = 0;
    private Query<int, bool> isEvenQuery = null!;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        isEvenQuery = new(
            async (val, ct) => (await Http.GetFromJsonAsync<IsEvenResponse>(
                $"https://api.isevenapi.xyz/api/iseven/{val}",
                ct
            ))!.IsEven
        );
    }

    private void IncrementCount()
    {
        currentCount++;
    }

    private record IsEvenResponse(bool IsEven);
}
