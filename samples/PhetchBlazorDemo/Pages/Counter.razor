@page "/counter"
@inject IsEvenApi Api

<PageTitle>Counter</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Counter</MudText>

<MudText Class="mb-4">
    This component demonstrates fetching data from a server using <code>UseEndpoint</code>,
    with caching and error handling.
</MudText>

<MudText Class="mb-4">Current count: <strong>@currentCount</strong></MudText>

<div style="margin-bottom: 12px">
    <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="DecrementCount" Disabled="currentCount < 1">-</MudButton>
    <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="IncrementCount">+</MudButton>
    <MudButton @onclick="Api.IsEvenEndpoint.InvalidateAll">Invalidate Cache</MudButton>
</div>

<UseEndpoint Endpoint="Api.IsEvenEndpoint" Arg="currentCount" Context="isEvenQuery" Options="queryOptions">
    <MudText Class="mb-4">
        The number @currentCount is: @if (isEvenQuery.IsLoading)
        {
            <MudProgressLinear Indeterminate />
        }
        else if (isEvenQuery.IsError)
        {
            <MudAlert Severity="Severity.Error">@isEvenQuery.Error.Message</MudAlert>
        }
        else if (isEvenQuery.HasData)
        {
            <span style="@(isEvenQuery.IsFetching ? "opacity: 0.7" : "")">
                @(isEvenQuery.Data ? "even" : "odd")
            </span>
        }
    </MudText>
</UseEndpoint>

@code {
    private int currentCount = 0;
    private readonly QueryOptions<int, bool> queryOptions = new()
    {
        StaleTime = TimeSpan.FromSeconds(5),
    };

    private void IncrementCount() => currentCount++;
    private void DecrementCount() => currentCount--;
}
