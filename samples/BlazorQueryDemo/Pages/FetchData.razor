@page "/fetchdata"
@inject HttpClient Http
@using BlazorQueryDemo.Shared

<PageTitle>Weather forecast</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>

<MudButton @onclick="() => _ = forecastsQuery.Refetch()">Refresh</MudButton>

@if (forecastsQuery.IsLoading)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else if (forecastsQuery.IsError)
{
	<MudAlert Severity="Severity.Error">@forecastsQuery.Error.Message</MudAlert>
}
else
{
    <MudTable Items="forecastsQuery.Data" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="(WeatherForecast x) => x.Date">Date</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="(WeatherForecast x) => x.TemperatureC">Temp. (C)</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="(WeatherForecast x) => x.TemperatureF">Temp. (F)</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="(WeatherForecast x) => x.Summary">Summary</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Date">@context.Date</MudTd>
            <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
            <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
            <MudTd DataLabel="Summary">@context.Summary</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}

@code {
    private Query<Unit, WeatherForecast[]> forecastsQuery = null!;

	protected override void OnInitialized()
	{
		forecastsQuery = new Query<WeatherForecast[]>(
			StateHasChanged,
			token => Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json", token)!
		);
	}

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
